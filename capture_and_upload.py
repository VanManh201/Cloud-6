import cv2
import numpy as np
import tensorflow as tf
import boto3
from PIL import Image
import time

# C·∫•u h√¨nh AWS
S3_BUCKET = "handwriting-recognition-bucket"
AWS_REGION = "us-east-1"  
s3 = boto3.client("s3")

# Load m√¥ h√¨nh nh·∫≠n di·ªán ch·ªØ s·ªë vi·∫øt tay
model = tf.keras.models.load_model("emnist_handwriting_model.h5")

def process_image(filename):
    """ Ti·ªÅn x·ª≠ l√Ω ·∫£nh tr∆∞·ªõc khi ƒë∆∞a v√†o model """
    image = Image.open(filename).convert("L")  
    original_width, original_height = image.size
    
    # T·∫°o ·∫£nh vu√¥ng v·ªõi padding ƒë·ªÉ gi·ªØ t·ªâ l·ªá
    max_size = max(original_width, original_height)
    new_image = Image.new("L", (max_size, max_size), 0)  
    new_image.paste(image, ((max_size - original_width) // 2, (max_size - original_height) // 2))

    # Resize v·ªÅ 28x28
    image_resized = new_image.resize((28, 28), Image.Resampling.LANCZOS)

    # Chu·∫©n h√≥a ·∫£nh
    image_array = np.array(image_resized) / 255.0
    image_array = image_array.reshape(1, 28, 28, 1)  # ƒê·ªãnh d·∫°ng input cho model

    return image_array

# M·ªü camera
cap = cv2.VideoCapture(0)
predicted_label = None  # Bi·∫øn l∆∞u k·∫øt qu·∫£ d·ª± ƒëo√°n

while True:
    ret, frame = cap.read()
    if not ret:
        break

    # Hi·ªÉn th·ªã s·ªë nh·∫≠n di·ªán tr√™n camera
    if predicted_label is not None:
        result_text = f"S·ªë: {predicted_label}"
        cv2.putText(frame, result_text, (50, 50), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 0), 2)

    # Hi·ªÉn th·ªã khung h√¨nh camera
    cv2.imshow("Handwriting Recognition", frame)

    key = cv2.waitKey(1) & 0xFF
    if key == ord("s"):  # Nh·∫•n 's' ƒë·ªÉ ch·ª•p ·∫£nh
        filename = f"handwriting_{int(time.time())}.png"
        cv2.imwrite(filename, frame)
        print(f"üì∏ ƒê√£ l∆∞u ·∫£nh: {filename}")

        # Nh·∫≠n di·ªán s·ªë vi·∫øt tay
        image = process_image(filename)
        pred = model.predict(image)
        predicted_label = np.argmax(pred, axis=1)[0]
        confidence = pred[0][predicted_label] * 100

        # Upload ·∫£nh l√™n AWS S3
        s3.upload_file(filename, S3_BUCKET, filename)
        print(f"‚úÖ ƒê√£ upload {filename} l√™n S3!")

        print(f"üî¢ Number: {predicted_label} ({confidence:.2f}%)")

    elif key == ord("q"):  # Nh·∫•n 'q' ƒë·ªÉ tho√°t
        break

cap.release()
cv2.destroyAllWindows()
